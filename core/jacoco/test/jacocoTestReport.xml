<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="vanilla"><sessioninfo id="inhouse-18d43a68" start="1512739340763" dump="1512739351308"/><sessioninfo id="inhouse-5ecd57c4" start="1512739340739" dump="1512739351657"/><sessioninfo id="inhouse-82bfb721" start="1512739340790" dump="1512739351975"/><sessioninfo id="inhouse-925ff2fc" start="1512739340755" dump="1512739352279"/><sessioninfo id="inhouse-7fdc71d7" start="1512739340802" dump="1512739353124"/><sessioninfo id="inhouse-a270c948" start="1512739340953" dump="1512739354676"/><sessioninfo id="inhouse-d131b3ae" start="1512739340856" dump="1512739355007"/><sessioninfo id="inhouse-7d973c3a" start="1512739340802" dump="1512739355297"/><package name="com/stehno/vanilla/matcher"><class name="com/stehno/vanilla/matcher/ObjectMatcher$_matches_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/matcher/ObjectMatcher$_matches_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="18" covered="68"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActivePropertyMatchers" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObj" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="91"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/matcher/ObjectMatcher"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matcher" desc="(Ljava/lang/Class;Lgroovy/lang/Closure;)Lcom/stehno/vanilla/matcher/ObjectMatcher;" line="60"><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeMatchers" desc="(Ljava/util/Map;Z)Lcom/stehno/vanilla/matcher/ObjectMatcher;" line="71"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeMatcher" desc="(Ljava/lang/Class;Ljava/lang/Object;)Lcom/stehno/vanilla/matcher/ObjectMatcher;" line="81"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyMatchers" desc="(Ljava/util/Map;)Lcom/stehno/vanilla/matcher/ObjectMatcher;" line="87"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMatcher" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/stehno/vanilla/matcher/ObjectMatcher;" line="93"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/util/Map;Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="9" covered="54"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="score" desc="(Ljava/util/Map;Ljava/lang/Object;)F" line="125"><counter type="INSTRUCTION" missed="27" covered="99"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callMatcher" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="148"><counter type="INSTRUCTION" missed="50" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeMatchers" desc="(Ljava/util/Map;)Lcom/stehno/vanilla/matcher/ObjectMatcher;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="score" desc="(Ljava/lang/Object;)F"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="165" covered="307"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="10" covered="18"/><counter type="COMPLEXITY" missed="11" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/matcher/ObjectMatcher$_score_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="130"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/matcher/ObjectMatcher$_score_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="22" covered="114"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActivePropertyMatchers" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObj" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHits" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCount" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="153"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ObjectMatcher.groovy"><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="2" ci="5" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="2" ci="2" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="14" mb="0" cb="0"/><line nr="109" mi="11" ci="38" mb="0" cb="0"/><line nr="110" mi="14" ci="21" mb="1" cb="1"/><line nr="111" mi="4" ci="45" mb="1" cb="1"/><line nr="125" mi="0" ci="14" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="2" ci="39" mb="0" cb="0"/><line nr="131" mi="14" ci="21" mb="1" cb="1"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="44" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="21" mb="0" cb="0"/><line nr="137" mi="3" ci="21" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="27" ci="26" mb="4" cb="4"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="11" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="39" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="307" covered="581"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="11" covered="26"/><counter type="COMPLEXITY" missed="25" covered="17"/><counter type="METHOD" missed="14" covered="16"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="307" covered="581"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="11" covered="26"/><counter type="COMPLEXITY" missed="25" covered="17"/><counter type="METHOD" missed="14" covered="16"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/stehno/vanilla/jdbc/mapper/annotation"><class name="com/stehno/vanilla/jdbc/mapper/annotation/InjectResultSetMapper$_config_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="InjectResultSetMapper.groovy"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="com/stehno/vanilla/mapper"><class name="com/stehno/vanilla/mapper/PropertyMappingConfig"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDestinationName" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConverter" desc="()Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="into" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/mapper/PropertyMapping;" line="55"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="using" desc="(Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="212" covered="68"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/AbstractObjectMapper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collector" desc="(Ljava/lang/Class;)Lgroovy/lang/Closure;" line="33"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="54"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/AbstractObjectMapper$_collector_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDestClass" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/ObjectMapperConfig"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mappings" desc="()Ljava/util/Collection;" line="45"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/mapper/PropertyMapping;" line="55"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="69"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractObjectMapper.groovy"><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="2" ci="2" mb="0" cb="0"/><line nr="33" mi="2" ci="7" mb="0" cb="0"/><line nr="34" mi="2" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="81"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="PropertyMappingConfig.groovy"><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="2" ci="11" mb="0" cb="2"/><line nr="45" mi="2" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="2" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="212" covered="68"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectMapperConfig.groovy"><line nr="45" mi="2" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="13" mb="0" cb="0"/><line nr="57" mi="2" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="69"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="264" covered="218"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="13" covered="16"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/stehno/vanilla/jdbc/mapper/transform"><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_findMappableProperties_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="52" covered="48"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="15" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="55"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_findMappableProperties_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNames" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_findMappableProperties_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/MethodNode;)Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/MethodNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_findMappableProperties_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/MethodNode;)Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/MethodNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNames" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_createMapperClass_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="196"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapEntryExpressions" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapperBuilder"><method name="&lt;init&gt;" desc="(Lorg/codehaus/groovy/ast/ClassNode;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFieldMapping" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="37"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMapping" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mappings" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignored" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignore" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredNames" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMappings" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__mappings$get" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__ignoredNames$get" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__ignoredNames$set" desc="(Ljava/util/Collection;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__mappings$set" desc="(Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappedTypeNode" desc="()Lorg/codehaus/groovy/ast/ClassNode;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="81"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_extractMapperConfig_closure7$_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperConfig" desc="()Lcom/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapperBuilder;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/CompiledFieldMapping"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Ljava/lang/Object;Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="48"><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="61"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="129"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="([Lorg/codehaus/groovy/ast/ASTNode;Lorg/codehaus/groovy/control/SourceUnit;)V" line="57"><counter type="INSTRUCTION" missed="199" covered="220"/><counter type="BRANCH" missed="29" covered="23"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="23" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapperName" desc="(Lorg/codehaus/groovy/ast/expr/ClassExpression;Lorg/codehaus/groovy/ast/expr/ConstantExpression;)Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="46" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMappableProperties" desc="(Lorg/codehaus/groovy/ast/ClassNode;)Ljava/util/Set;" line="106"><counter type="INSTRUCTION" missed="2" covered="77"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMapperConfig" desc="(Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/expr/ClosureExpression;Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;)Lcom/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapperBuilder;" line="124"><counter type="INSTRUCTION" missed="2" covered="86"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleFroms" desc="(Ljava/util/Map;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="186"><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMapperClass" desc="(Ljava/lang/String;Lcom/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapperBuilder;)Lorg/codehaus/groovy/ast/ClassNode;" line="191"><counter type="INSTRUCTION" missed="2" covered="213"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAcceptedSetter" desc="(Lorg/codehaus/groovy/ast/MethodNode;Ljava/util/Collection;)Z" line="219"><counter type="INSTRUCTION" missed="71" covered="68"/><counter type="BRANCH" missed="19" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="11" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implementMapping" desc="(Ljava/util/List;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;)V" line="224"><counter type="INSTRUCTION" missed="31" covered="159"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformMethodNode" desc="(Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/control/SourceUnit;)V" line="257"><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFieldNode" desc="(Ljava/lang/String;Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)Lorg/codehaus/groovy/ast/FieldNode;" line="274"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformFieldNode" desc="(Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)V" line="284"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformPropertyNode" desc="(Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)V" line="291"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="523" covered="1228"/><counter type="BRANCH" missed="52" covered="60"/><counter type="LINE" missed="17" covered="71"/><counter type="COMPLEXITY" missed="41" covered="30"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_extractMapperConfig_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="137"><counter type="INSTRUCTION" missed="24" covered="220"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperConfig" desc="()Lcom/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapperBuilder;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="235"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_extractMapperConfig_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_extractMapperConfig_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapperConfig" desc="()Lcom/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapperBuilder;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="26"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/InjectResultSetMapperTransform$_handleFroms_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/transform/CompiledResultSetMapper"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefix" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapRow" desc="(Ljava/sql/ResultSet;I)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CompiledResultSetMapper.groovy"><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="2" ci="3" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompiledFieldMapping.groovy"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="18" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="2"/><line nr="51" mi="0" ci="20" mb="0" cb="0"/><line nr="54" mi="0" ci="27" mb="0" cb="0"/><line nr="56" mi="2" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="32" mb="0" cb="0"/><line nr="62" mi="2" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="129"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompiledResultSetMapperBuilder.groovy"><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="2" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="81"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InjectResultSetMapperTransform.groovy"><line nr="49" mi="0" ci="24" mb="0" cb="0"/><line nr="57" mi="16" ci="20" mb="3" cb="3"/><line nr="58" mi="16" ci="18" mb="3" cb="3"/><line nr="60" mi="3" ci="14" mb="5" cb="5"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="26" mb="0" cb="2"/><line nr="69" mi="21" ci="24" mb="13" cb="9"/><line nr="70" mi="17" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="18" mb="0" cb="0"/><line nr="75" mi="0" ci="19" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="88" mi="27" ci="1" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="43" ci="3" mb="0" cb="0"/><line nr="97" mi="26" ci="1" mb="0" cb="0"/><line nr="102" mi="46" ci="33" mb="1" cb="1"/><line nr="106" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="0" ci="29" mb="0" cb="0"/><line nr="109" mi="52" ci="46" mb="21" cb="9"/><line nr="111" mi="2" ci="13" mb="0" cb="0"/><line nr="114" mi="0" ci="29" mb="0" cb="0"/><line nr="115" mi="2" ci="12" mb="0" cb="0"/><line nr="117" mi="2" ci="18" mb="0" cb="0"/><line nr="120" mi="2" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="16" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="17" mb="0" cb="0"/><line nr="129" mi="2" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="11" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="2" ci="29" mb="0" cb="0"/><line nr="137" mi="0" ci="14" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="1" cb="5"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="17" mb="0" cb="0"/><line nr="147" mi="0" ci="23" mb="0" cb="0"/><line nr="148" mi="0" ci="14" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="2"/><line nr="152" mi="3" ci="18" mb="0" cb="0"/><line nr="153" mi="2" ci="16" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="1" cb="1"/><line nr="157" mi="0" ci="20" mb="0" cb="0"/><line nr="158" mi="0" ci="23" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="6" ci="27" mb="0" cb="0"/><line nr="167" mi="15" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="4" mb="0" cb="0"/><line nr="179" mi="2" ci="20" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="51" mb="0" cb="0"/><line nr="186" mi="0" ci="16" mb="0" cb="0"/><line nr="187" mi="2" ci="50" mb="0" cb="0"/><line nr="191" mi="0" ci="45" mb="0" cb="0"/><line nr="193" mi="0" ci="10" mb="0" cb="0"/><line nr="195" mi="0" ci="16" mb="0" cb="0"/><line nr="196" mi="2" ci="10" mb="0" cb="0"/><line nr="199" mi="0" ci="19" mb="0" cb="0"/><line nr="203" mi="0" ci="17" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="37" mb="0" cb="0"/><line nr="208" mi="0" ci="13" mb="0" cb="0"/><line nr="210" mi="0" ci="22" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="14" mb="0" cb="0"/><line nr="215" mi="2" ci="2" mb="0" cb="0"/><line nr="219" mi="71" ci="66" mb="19" cb="19"/><line nr="224" mi="0" ci="11" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="2"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="1" cb="1"/><line nr="229" mi="0" ci="11" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="2"/><line nr="234" mi="0" ci="21" mb="0" cb="0"/><line nr="235" mi="3" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="1" cb="1"/><line nr="238" mi="0" ci="27" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="20" ci="1" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="23" mb="0" cb="0"/><line nr="252" mi="0" ci="23" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="32" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="33" mb="1" cb="5"/><line nr="262" mi="0" ci="45" mb="0" cb="0"/><line nr="265" mi="0" ci="19" mb="0" cb="0"/><line nr="268" mi="0" ci="15" mb="0" cb="0"/><line nr="270" mi="0" ci="38" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="23" ci="0" mb="0" cb="0"/><line nr="277" mi="11" ci="0" mb="0" cb="0"/><line nr="279" mi="19" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="285" mi="32" ci="0" mb="0" cb="0"/><line nr="286" mi="20" ci="0" mb="0" cb="0"/><line nr="287" mi="16" ci="0" mb="0" cb="0"/><line nr="291" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="760" covered="1719"/><counter type="BRANCH" missed="80" covered="80"/><counter type="LINE" missed="18" covered="95"/><counter type="COMPLEXITY" missed="73" covered="54"/><counter type="METHOD" missed="15" covered="32"/><counter type="CLASS" missed="0" covered="11"/></sourcefile><counter type="INSTRUCTION" missed="831" covered="1963"/><counter type="BRANCH" missed="81" covered="83"/><counter type="LINE" missed="19" covered="108"/><counter type="COMPLEXITY" missed="82" covered="74"/><counter type="METHOD" missed="23" covered="51"/><counter type="CLASS" missed="0" covered="14"/></package><package name="com/stehno/vanilla/mapper/runtime"><class name="com/stehno/vanilla/mapper/runtime/RuntimeObjectMapper$_copy_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/mapper/PropertyMapping;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lcom/stehno/vanilla/mapper/PropertyMapping;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSrc" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDest" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/runtime/RuntimeObjectMapper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapper" desc="(Lgroovy/lang/Closure;)Lcom/stehno/vanilla/mapper/ObjectMapper;" line="38"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyMapping" desc="(Lcom/stehno/vanilla/mapper/PropertyMapping;Ljava/lang/Object;Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="34" covered="163"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callConverter" desc="(Lgroovy/lang/Closure;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="22" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Lcom/stehno/vanilla/mapper/ObjectMapperConfig;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setConfig" desc="(Lcom/stehno/vanilla/mapper/ObjectMapperConfig;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="313"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuntimeObjectMapper.groovy"><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="1" cb="1"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="14" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="2" ci="20" mb="0" cb="0"/><line nr="51" mi="0" ci="19" mb="0" cb="0"/><line nr="52" mi="2" ci="13" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="4"/><line nr="58" mi="0" ci="26" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="25" mb="0" cb="0"/><line nr="62" mi="0" ci="24" mb="0" cb="0"/><line nr="63" mi="0" ci="17" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="1" cb="1"/><line nr="66" mi="0" ci="43" mb="0" cb="0"/><line nr="69" mi="34" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="1" cb="1"/><line nr="75" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="2"/><line nr="78" mi="3" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="1" cb="1"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="351"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="90" covered="351"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/stehno/vanilla/test"><class name="com/stehno/vanilla/test/Randomizers$_forByte_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="202"><counter type="INSTRUCTION" missed="13" covered="28"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="35"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forArray_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;Ljava/lang/Object;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="2" covered="85"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueRandomizer" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="108"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/MicroBenchScript"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterations" desc="(I)V" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepare" desc="(Lgroovy/lang/Closure;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Lgroovy/lang/Closure;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBench" desc="()Lcom/stehno/vanilla/test/MicroBench;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forTemplate_closure23$_closure28"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="376"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRandomizers" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR" desc="()Ljava/util/Random;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="51"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forShort_closure12"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="230"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="50"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forChar_closure16"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="277"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="37"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forEnum_closure17"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="290"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getE" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="43"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forDate_closure15"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="266"><counter type="INSTRUCTION" missed="7" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="65"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forString_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="2" covered="75"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharacters" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="98"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/PropertyRandomizer"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="299"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomize" desc="(Ljava/lang/Class;Lgroovy/lang/Closure;)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="92"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoringTypes" desc="([Ljava/lang/Class;)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="110"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ignoringProperties" desc="([Ljava/lang/String;)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="121"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeRandomizers" desc="(Ljava/util/Map;Z)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="139"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeRandomizer" desc="(Ljava/lang/Class;Ljava/lang/Object;)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="148"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyRandomizers" desc="(Ljava/util/Map;)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="163"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyRandomizer" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/stehno/vanilla/test/PropertyRandomizer;" line="168"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="(Ljava/util/Map;)Ljava/lang/Object;" line="187"><counter type="INSTRUCTION" missed="2" covered="147"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isImmutable" desc="()Z" line="227"><counter type="INSTRUCTION" missed="9" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callRandomizer" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="231"><counter type="INSTRUCTION" missed="52" covered="52"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(I)Ljava/util/List;" line="256"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(I)Ljava/util/List;" line="270"><counter type="INSTRUCTION" missed="16" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomize" desc="(Ljava/lang/Class;)Lcom/stehno/vanilla/test/PropertyRandomizer;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeRandomizers" desc="(Ljava/util/Map;)Lcom/stehno/vanilla/test/PropertyRandomizer;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="120" covered="698"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="5" covered="62"/><counter type="COMPLEXITY" missed="7" covered="19"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forBoolean_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="191"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Fixture"><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;)V"><counter type="INSTRUCTION" missed="369" covered="95"/><counter type="BRANCH" missed="19" covered="7"/><counter type="COMPLEXITY" missed="13" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="22" covered="44"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="field" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/Map;" line="117"><counter type="INSTRUCTION" missed="37" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/lang/Object;)Ljava/util/Map;" line="123"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="object" desc="(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="object" desc="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verify" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Z" line="153"><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verify" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="159"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="field" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="object" desc="(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="object" desc="(Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verify" desc="(Ljava/util/Map;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="verify" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFixtures" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="821" covered="294"/><counter type="BRANCH" missed="51" covered="13"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="43" covered="12"/><counter type="METHOD" missed="11" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forLocalDateTime_closure18"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="303"><counter type="INSTRUCTION" missed="2" covered="97"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOffset" desc="()Ljava/time/ZoneOffset;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="120"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forRange_closure22"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="354"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="37"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forArray_closure4$_closure26"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="26" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueRandomizer" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColl" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR" desc="()Ljava/util/Random;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInst" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="70"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/MicroBench"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterations" desc="(I)V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepare" desc="(Lgroovy/lang/Closure;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Lgroovy/lang/Closure;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(J)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="3" covered="75"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="175"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forTemplate_closure23"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="376"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTemplate" desc="()Lgroovy/text/Template;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRandomizers" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="58"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forFloat_closure13"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="242"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="50"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forList_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="2" covered="78"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueRandomizer" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="101"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Fixture$_verify_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActual" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forString_closure5$_closure27"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="137"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChars" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharacters" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRng" desc="()Ljava/util/Random;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="62"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forLong_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="180"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/PropertyRandomizer$_times_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="258"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItems" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constant" desc="(Ljava/lang/Object;)Lgroovy/lang/Closure;" line="49"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="random" desc="(Lgroovy/lang/Closure;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forList" desc="(Lgroovy/lang/IntRange;Lgroovy/lang/Closure;)Lgroovy/lang/Closure;" line="71"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forSet" desc="(Lgroovy/lang/IntRange;Lgroovy/lang/Closure;)Lgroovy/lang/Closure;" line="92"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forArray" desc="(Lgroovy/lang/IntRange;Lgroovy/lang/Closure;)Lgroovy/lang/Closure;" line="113"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forString" desc="(Lgroovy/lang/IntRange;Ljava/lang/String;)Lgroovy/lang/Closure;" line="134"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forNumberString" desc="(Lgroovy/lang/IntRange;Z)Lgroovy/lang/Closure;" line="151"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forInteger" desc="(Lgroovy/lang/IntRange;)Lgroovy/lang/Closure;" line="167"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forLong" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;" line="179"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forBoolean" desc="()Lgroovy/lang/Closure;" line="190"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forByte" desc="()Lgroovy/lang/Closure;" line="201"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forByteArray" desc="(Lgroovy/lang/IntRange;)Lgroovy/lang/Closure;" line="215"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forShort" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;" line="229"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forFloat" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;" line="241"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forDouble" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;" line="253"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forDate" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;" line="265"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forChar" desc="()Lgroovy/lang/Closure;" line="276"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEnum" desc="(Ljava/lang/Object;)Lgroovy/lang/Closure;" line="289"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forLocalDateTime" desc="(Lgroovy/lang/Range;Ljava/time/ZoneOffset;)Lgroovy/lang/Closure;" line="302"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forCollection" desc="(Ljava/util/Collection;)Lgroovy/lang/Closure;" line="317"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forCollection" desc="([Ljava/lang/Object;)Lgroovy/lang/Closure;" line="329"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forItems" desc="([Ljava/lang/Object;)Lgroovy/lang/Closure;" line="341"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forRange" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;" line="353"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forTemplate" desc="(Ljava/util/Map;Ljava/lang/String;)Lgroovy/lang/Closure;" line="369"><counter type="INSTRUCTION" missed="3" covered="71"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextShort" desc="(Ljava/util/Random;SS)S" line="381"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextFloat" desc="(Ljava/util/Random;FF)F" line="385"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="(Ljava/util/Random;II)Ljava/lang/Integer;" line="389"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLong" desc="(Ljava/util/Random;JJ)J" line="393"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDouble" desc="(Ljava/util/Random;DD)D" line="397"><counter type="INSTRUCTION" missed="32" covered="30"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forList" desc="(Lgroovy/lang/Closure;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forSet" desc="(Lgroovy/lang/Closure;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forArray" desc="(Lgroovy/lang/Closure;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forString" desc="(Lgroovy/lang/IntRange;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forString" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forNumberString" desc="(Lgroovy/lang/IntRange;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forNumberString" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forInteger" desc="()Lgroovy/lang/Closure;" line="166"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forLong" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forByteArray" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forShort" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forFloat" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forDouble" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forDate" desc="()Lgroovy/lang/Closure;" line="264"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forLocalDateTime" desc="(Lgroovy/lang/Range;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forLocalDateTime" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forTemplate" desc="(Ljava/lang/String;)Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="207" covered="806"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="11" covered="42"/><counter type="METHOD" missed="6" covered="42"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forItems_closure21"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="342"><counter type="INSTRUCTION" missed="25" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItems" desc="()[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/FixtureBuilder"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="define" desc="(Lgroovy/lang/Closure;)Lcom/stehno/vanilla/test/Fixture;" line="44"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fix" desc="(Ljava/lang/Object;Ljava/util/Map;)Lcom/stehno/vanilla/test/FixtureBuilder;" line="59"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fix" desc="(Ljava/lang/Object;Lcom/stehno/vanilla/test/PropertyRandomizer;)Lcom/stehno/vanilla/test/FixtureBuilder;" line="71"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/stehno/vanilla/test/Fixture;" line="82"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="135"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Assertions"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertValidEqualsAndHashcode" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="75" covered="127"/><counter type="BRANCH" missed="28" covered="28"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="28" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertMatches" desc="(Ljava/util/Map;Ljava/lang/Object;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertToday" desc="(Ljava/util/Date;)V" line="111"><counter type="INSTRUCTION" missed="9" covered="216"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="96" covered="364"/><counter type="BRANCH" missed="34" covered="38"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="35" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forInteger_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="7" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forSet_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;Ljava/lang/Object;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="2" covered="81"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueRandomizer" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="104"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/PropertyRandomizer$_one_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="27" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstMap" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalAsType" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="41"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/PropertyRandomizer$_one_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="199"><counter type="INSTRUCTION" missed="237" covered="139"/><counter type="BRANCH" missed="29" covered="25"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActivePropertyRandomizers" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstMap" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="264" covered="162"/><counter type="BRANCH" missed="29" covered="25"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="20" covered="12"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_constant_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/test/Randomizers$_forCollection_closure20"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="330"><counter type="INSTRUCTION" missed="25" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCollection" desc="()[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forDouble_closure14"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="254"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Lgroovy/lang/Range;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forList_closure2$_closure24"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="26" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueRandomizer" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getList" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR" desc="()Ljava/util/Random;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInst" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="70"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/MicroBench$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="5"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forCollection_closure19"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="318"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCollection" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="37"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forByteArray_closure11"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCount" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="63"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Assertions$_assertMatches_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="71" covered="61"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActual" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="76"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forSet_closure3$_closure25"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="26" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueRandomizer" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColl" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR" desc="()Ljava/util/Random;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInst" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="70"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/Randomizers$_forNumberString_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/util/Random;)Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="29" covered="66"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/Random;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDigits" desc="()Lgroovy/lang/IntRange;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDecimal" desc="()Z"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="89"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PropertyRandomizer.groovy"><line nr="49" mi="0" ci="14" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="23" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="12" mb="0" cb="0"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="33" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="2" ci="5" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="2" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="2" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="2" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="2" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="2" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="2"/><line nr="190" mi="0" ci="20" mb="0" cb="0"/><line nr="193" mi="0" ci="10" mb="0" cb="0"/><line nr="196" mi="0" ci="14" mb="0" cb="0"/><line nr="198" mi="0" ci="22" mb="0" cb="0"/><line nr="199" mi="58" ci="65" mb="21" cb="21"/><line nr="200" mi="35" ci="35" mb="2" cb="2"/><line nr="202" mi="9" ci="5" mb="6" cb="2"/><line nr="203" mi="92" ci="0" mb="0" cb="0"/><line nr="206" mi="12" ci="12" mb="0" cb="0"/><line nr="207" mi="31" ci="20" mb="0" cb="0"/><line nr="211" mi="0" ci="13" mb="0" cb="0"/><line nr="213" mi="0" ci="30" mb="0" cb="0"/><line nr="215" mi="0" ci="20" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="1" cb="1"/><line nr="217" mi="0" ci="8" mb="0" cb="0"/><line nr="219" mi="27" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="2" mb="0" cb="0"/><line nr="227" mi="9" ci="21" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="3" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="1" cb="1"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="2"/><line nr="237" mi="6" ci="14" mb="1" cb="1"/><line nr="238" mi="0" ci="5" mb="1" cb="1"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="11" ci="0" mb="0" cb="0"/><line nr="245" mi="32" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="13" mb="0" cb="0"/><line nr="258" mi="2" ci="13" mb="0" cb="0"/><line nr="260" mi="2" ci="6" mb="0" cb="0"/><line nr="270" mi="16" ci="9" mb="2" cb="2"/><counter type="INSTRUCTION" missed="468" covered="931"/><counter type="BRANCH" missed="40" covered="40"/><counter type="LINE" missed="7" covered="70"/><counter type="COMPLEXITY" missed="35" covered="35"/><counter type="METHOD" missed="9" covered="21"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="MicroBenchScript.groovy"><line nr="26" mi="0" ci="32" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="2" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FixtureBuilder.groovy"><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="14" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="2" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="17" mb="0" cb="0"/><line nr="60" mi="2" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="20" mb="0" cb="0"/><line nr="72" mi="2" ci="2" mb="0" cb="0"/><line nr="82" mi="2" ci="15" mb="0" cb="0"/><line nr="105" mi="2" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="34" mb="0" cb="4"/><line nr="118" mi="35" ci="4" mb="1" cb="1"/><line nr="119" mi="2" ci="10" mb="0" cb="0"/><line nr="123" mi="2" ci="13" mb="0" cb="0"/><line nr="136" mi="2" ci="13" mb="0" cb="0"/><line nr="140" mi="2" ci="11" mb="0" cb="0"/><line nr="153" mi="9" ci="19" mb="0" cb="0"/><line nr="154" mi="2" ci="12" mb="0" cb="0"/><line nr="159" mi="9" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="851" covered="458"/><counter type="BRANCH" missed="51" covered="13"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="45" covered="19"/><counter type="METHOD" missed="13" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Randomizers.groovy"><line nr="39" mi="0" ci="22" mb="0" cb="0"/><line nr="49" mi="15" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="11" mb="0" cb="0"/><line nr="71" mi="2" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="50" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="1" cb="1"/><line nr="75" mi="24" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="18" mb="0" cb="0"/><line nr="80" mi="2" ci="4" mb="0" cb="0"/><line nr="92" mi="2" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="13" mb="0" cb="0"/><line nr="94" mi="0" ci="50" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="1" cb="1"/><line nr="96" mi="24" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="18" mb="0" cb="0"/><line nr="101" mi="2" ci="4" mb="0" cb="0"/><line nr="113" mi="2" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="115" mi="0" ci="50" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="1" cb="1"/><line nr="117" mi="24" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="18" mb="0" cb="0"/><line nr="122" mi="2" ci="11" mb="0" cb="0"/><line nr="134" mi="2" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="10" mb="0" cb="0"/><line nr="136" mi="0" ci="49" mb="0" cb="0"/><line nr="137" mi="2" ci="29" mb="0" cb="0"/><line nr="139" mi="2" ci="8" mb="0" cb="0"/><line nr="151" mi="2" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="28" mb="0" cb="0"/><line nr="153" mi="5" ci="12" mb="5" cb="5"/><line nr="154" mi="22" ci="19" mb="0" cb="0"/><line nr="156" mi="2" ci="5" mb="0" cb="0"/><line nr="166" mi="2" ci="48" mb="0" cb="0"/><line nr="167" mi="2" ci="7" mb="0" cb="0"/><line nr="168" mi="7" ci="39" mb="1" cb="1"/><line nr="179" mi="2" ci="7" mb="0" cb="0"/><line nr="180" mi="2" ci="21" mb="0" cb="0"/><line nr="190" mi="2" ci="6" mb="0" cb="0"/><line nr="191" mi="2" ci="6" mb="0" cb="0"/><line nr="201" mi="2" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="13" ci="14" mb="4" cb="4"/><line nr="215" mi="2" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="37" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="2" ci="2" mb="0" cb="0"/><line nr="229" mi="2" ci="7" mb="0" cb="0"/><line nr="230" mi="2" ci="33" mb="0" cb="0"/><line nr="241" mi="2" ci="7" mb="0" cb="0"/><line nr="242" mi="2" ci="33" mb="0" cb="0"/><line nr="253" mi="2" ci="7" mb="0" cb="0"/><line nr="254" mi="2" ci="21" mb="0" cb="0"/><line nr="264" mi="2" ci="21" mb="0" cb="0"/><line nr="265" mi="2" ci="7" mb="0" cb="0"/><line nr="266" mi="7" ci="48" mb="1" cb="3"/><line nr="276" mi="2" ci="6" mb="0" cb="0"/><line nr="277" mi="2" ci="28" mb="0" cb="0"/><line nr="289" mi="2" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="10" mb="0" cb="0"/><line nr="291" mi="2" ci="16" mb="0" cb="0"/><line nr="302" mi="2" ci="8" mb="0" cb="0"/><line nr="303" mi="0" ci="34" mb="0" cb="2"/><line nr="304" mi="0" ci="37" mb="0" cb="2"/><line nr="306" mi="2" ci="24" mb="0" cb="0"/><line nr="317" mi="2" ci="7" mb="0" cb="0"/><line nr="318" mi="2" ci="20" mb="0" cb="0"/><line nr="329" mi="2" ci="7" mb="0" cb="0"/><line nr="330" mi="25" ci="25" mb="2" cb="2"/><line nr="341" mi="2" ci="7" mb="0" cb="0"/><line nr="342" mi="25" ci="25" mb="2" cb="2"/><line nr="353" mi="2" ci="7" mb="0" cb="0"/><line nr="354" mi="2" ci="20" mb="0" cb="0"/><line nr="369" mi="0" ci="16" mb="0" cb="0"/><line nr="370" mi="1" ci="8" mb="2" cb="2"/><line nr="371" mi="0" ci="17" mb="0" cb="0"/><line nr="372" mi="0" ci="14" mb="0" cb="0"/><line nr="375" mi="2" ci="8" mb="0" cb="0"/><line nr="376" mi="4" ci="53" mb="0" cb="0"/><line nr="381" mi="4" ci="14" mb="0" cb="0"/><line nr="385" mi="4" ci="14" mb="0" cb="0"/><line nr="389" mi="2" ci="15" mb="0" cb="0"/><line nr="393" mi="4" ci="14" mb="0" cb="0"/><line nr="397" mi="32" ci="28" mb="3" cb="3"/><counter type="INSTRUCTION" missed="1269" covered="2455"/><counter type="BRANCH" missed="23" covered="29"/><counter type="LINE" missed="4" covered="82"/><counter type="COMPLEXITY" missed="101" covered="100"/><counter type="METHOD" missed="79" covered="96"/><counter type="CLASS" missed="1" covered="28"/></sourcefile><sourcefile name="Assertions.groovy"><line nr="47" mi="3" ci="5" mb="1" cb="1"/><line nr="48" mi="3" ci="5" mb="1" cb="1"/><line nr="50" mi="4" ci="8" mb="2" cb="2"/><line nr="51" mi="4" ci="8" mb="2" cb="2"/><line nr="52" mi="4" ci="8" mb="2" cb="2"/><line nr="54" mi="4" ci="8" mb="2" cb="2"/><line nr="55" mi="4" ci="8" mb="2" cb="2"/><line nr="56" mi="4" ci="8" mb="2" cb="2"/><line nr="60" mi="3" ci="5" mb="1" cb="1"/><line nr="61" mi="3" ci="5" mb="1" cb="1"/><line nr="62" mi="3" ci="5" mb="1" cb="1"/><line nr="63" mi="3" ci="5" mb="1" cb="1"/><line nr="67" mi="3" ci="5" mb="1" cb="1"/><line nr="68" mi="3" ci="5" mb="1" cb="1"/><line nr="69" mi="3" ci="5" mb="1" cb="1"/><line nr="70" mi="3" ci="5" mb="1" cb="1"/><line nr="74" mi="4" ci="9" mb="2" cb="2"/><line nr="75" mi="4" ci="9" mb="2" cb="2"/><line nr="76" mi="4" ci="9" mb="2" cb="2"/><line nr="78" mi="9" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="9" ci="38" mb="1" cb="1"/><line nr="99" mi="62" ci="7" mb="1" cb="1"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="9" ci="204" mb="6" cb="10"/><counter type="INSTRUCTION" missed="187" covered="440"/><counter type="BRANCH" missed="36" covered="42"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="39" covered="8"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MicroBench.groovy"><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="4"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="2" ci="6" mb="0" cb="0"/><line nr="73" mi="1" ci="34" mb="1" cb="1"/><line nr="74" mi="2" ci="41" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="180"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="2807" covered="4505"/><counter type="BRANCH" missed="151" covered="129"/><counter type="LINE" missed="12" covered="213"/><counter type="COMPLEXITY" missed="226" covered="176"/><counter type="METHOD" missed="109" covered="151"/><counter type="CLASS" missed="1" covered="40"/></package><package name="com/stehno/vanilla/overlap"><class name="com/stehno/vanilla/overlap/OverlapBuilder"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendLobe" desc="(Lcom/stehno/vanilla/overlap/Lobe;Lcom/stehno/vanilla/overlap/Lobe;)Lcom/stehno/vanilla/overlap/OverlapBuilder;" line="36"><counter type="INSTRUCTION" missed="30" covered="54"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendComparable" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/stehno/vanilla/overlap/OverlapBuilder;" line="52"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overlaps" desc="()Z" line="61"><counter type="INSTRUCTION" missed="38" covered="105"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="70" covered="206"/><counter type="BRANCH" missed="24" covered="26"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="19" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/ComparableLobe$_overlaps_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOther" desc="()Lcom/stehno/vanilla/overlap/Lobe;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/ComparableLobe$_overlaps_closure3$_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRule" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/ComparableLobe"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addRule" desc="(Ljava/lang/Object;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftShift" desc="(Ljava/lang/Object;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overlaps" desc="(Lcom/stehno/vanilla/overlap/Lobe;)Z" line="71"><counter type="INSTRUCTION" missed="18" covered="79"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rangesOverlap" desc="(Lgroovy/lang/Range;Lgroovy/lang/Range;)Z" line="91"><counter type="INSTRUCTION" missed="74" covered="67"/><counter type="BRANCH" missed="17" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="194" covered="127"/><counter type="BRANCH" missed="61" covered="25"/><counter type="COMPLEXITY" missed="41" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="429" covered="377"/><counter type="BRANCH" missed="89" covered="47"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="61" covered="17"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/Lobe$2"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/Lobe$1"><method name="overlaps" desc="(Lcom/stehno/vanilla/overlap/Lobe;)Z" line="38"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/Lobe"><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/Overlappable$Trait$Helper$_overlaps_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="5" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuilder" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOther" desc="()Lcom/stehno/vanilla/overlap/Overlappable;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/Overlappable$Trait$Helper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overlaps" desc="(Lcom/stehno/vanilla/overlap/Overlappable;Lcom/stehno/vanilla/overlap/Overlappable;)Z" line="33"><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="52"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/ComparableLobe$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/overlap/ComparableLobe$_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OverlapBuilder.groovy"><line nr="26" mi="0" ci="20" mb="0" cb="0"/><line nr="36" mi="19" ci="24" mb="15" cb="11"/><line nr="37" mi="9" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="18" mb="0" cb="0"/><line nr="41" mi="2" ci="2" mb="0" cb="0"/><line nr="52" mi="2" ci="21" mb="0" cb="0"/><line nr="61" mi="15" ci="23" mb="4" cb="4"/><line nr="63" mi="0" ci="18" mb="0" cb="2"/><line nr="64" mi="0" ci="13" mb="0" cb="0"/><line nr="65" mi="0" ci="13" mb="0" cb="0"/><line nr="67" mi="6" ci="12" mb="5" cb="5"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="4"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="9" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="206"/><counter type="BRANCH" missed="24" covered="26"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="19" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Lobe.groovy"><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="9" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Overlappable.groovy"><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="24" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="3" ci="21" mb="0" cb="0"/><line nr="39" mi="2" ci="21" mb="0" cb="0"/><line nr="43" mi="9" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="122"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ComparableLobe.groovy"><line nr="33" mi="0" ci="38" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="2" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="2" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="17" mb="0" cb="2"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="2" ci="28" mb="3" cb="3"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="2"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="4" ci="29" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="9" ci="2" mb="0" cb="0"/><line nr="91" mi="74" ci="65" mb="17" cb="13"/><counter type="INSTRUCTION" missed="472" covered="478"/><counter type="BRANCH" missed="89" covered="47"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="65" covered="25"/><counter type="METHOD" missed="6" covered="16"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="661" covered="827"/><counter type="BRANCH" missed="115" covered="75"/><counter type="LINE" missed="2" covered="40"/><counter type="COMPLEXITY" missed="95" covered="42"/><counter type="METHOD" missed="16" covered="26"/><counter type="CLASS" missed="0" covered="11"/></package><package name="com/stehno/vanilla/transform"><class name="com/stehno/vanilla/transform/LazyImmutableTransform"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="([Lorg/codehaus/groovy/ast/ASTNode;Lorg/codehaus/groovy/control/SourceUnit;)V" line="50"><counter type="INSTRUCTION" missed="86" covered="83"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createImmutableClass" desc="(Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/AnnotationNode;Lorg/codehaus/groovy/control/SourceUnit;)Lorg/codehaus/groovy/ast/ClassNode;" line="72"><counter type="INSTRUCTION" missed="2" covered="203"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildImmutableAnnotation" desc="(Lorg/codehaus/groovy/ast/AnnotationNode;)Lorg/codehaus/groovy/ast/AnnotationNode;" line="113"><counter type="INSTRUCTION" missed="2" covered="81"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAsImmutableMethod" desc="(Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/ClassNode;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCopyWithMethod" desc="(Lorg/codehaus/groovy/ast/ClassNode;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodN" desc="(Lorg/codehaus/groovy/ast/ClassNode;Ljava/lang/String;Lorg/codehaus/groovy/ast/stmt/Statement;[Lorg/codehaus/groovy/ast/Parameter;)Lorg/codehaus/groovy/ast/MethodNode;" line="161"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodN" desc="(Lorg/codehaus/groovy/ast/ClassNode;Ljava/lang/String;Lorg/codehaus/groovy/ast/stmt/Statement;)Lorg/codehaus/groovy/ast/MethodNode;" line="160"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="569"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="1" covered="41"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/transform/LazyImmutableTransform$_addAsImmutableMethod_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/transform/LazyImmutableTransform$_createImmutableClass_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/transform/LazyImmutableTransform$_createImmutableClass_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="2" covered="77"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lorg/codehaus/groovy/ast/PropertyNode;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImmutableClassNode" desc="()Lorg/codehaus/groovy/ast/ClassNode;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="92"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/transform/OnceTransform"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="([Lorg/codehaus/groovy/ast/ASTNode;Lorg/codehaus/groovy/control/SourceUnit;)V" line="63"><counter type="INSTRUCTION" missed="128" covered="425"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoreMultipleCalls" desc="(Lorg/codehaus/groovy/ast/AnnotationNode;)Z" line="120"><counter type="INSTRUCTION" missed="31" covered="40"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addError" desc="(Ljava/lang/String;Lorg/codehaus/groovy/ast/ASTNode;)V" line="125"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="218" covered="479"/><counter type="BRANCH" missed="18" covered="20"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="16" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OnceTransform.groovy"><line nr="63" mi="16" ci="20" mb="3" cb="3"/><line nr="64" mi="16" ci="18" mb="3" cb="3"/><line nr="66" mi="0" ci="12" mb="1" cb="1"/><line nr="67" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="2" ci="58" mb="1" cb="3"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="26" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="14" mb="0" cb="0"/><line nr="83" mi="0" ci="27" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="21" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="35" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="57" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="112" mi="47" ci="1" mb="0" cb="0"/><line nr="115" mi="47" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="31" ci="26" mb="10" cb="8"/><line nr="125" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="0" cb="0"/><line nr="127" mi="37" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="218" covered="479"/><counter type="BRANCH" missed="18" covered="20"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="16" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LazyImmutableTransform.groovy"><line nr="50" mi="16" ci="20" mb="3" cb="3"/><line nr="51" mi="16" ci="18" mb="3" cb="3"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="61" mi="1" ci="8" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="47" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="44" mb="0" cb="0"/><line nr="75" mi="0" ci="17" mb="0" cb="0"/><line nr="80" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="22" mb="0" cb="0"/><line nr="84" mi="0" ci="14" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="2" ci="21" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="26" mb="0" cb="0"/><line nr="99" mi="0" ci="22" mb="0" cb="0"/><line nr="100" mi="2" ci="26" mb="0" cb="0"/><line nr="105" mi="0" ci="13" mb="0" cb="0"/><line nr="107" mi="0" ci="29" mb="0" cb="0"/><line nr="109" mi="2" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="14" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="2" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="17" mb="0" cb="0"/><line nr="135" mi="2" ci="21" mb="0" cb="0"/><line nr="138" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="31" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="33" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="21" mb="0" cb="0"/><line nr="160" mi="2" ci="10" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="2" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="144" covered="726"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="362" covered="1205"/><counter type="BRANCH" missed="24" covered="34"/><counter type="LINE" missed="4" covered="75"/><counter type="COMPLEXITY" missed="26" covered="25"/><counter type="METHOD" missed="5" covered="17"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/stehno/vanilla/test/jdbc/mock"><class name="com/stehno/vanilla/test/jdbc/mock/ResultSetBuilder$_object_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColValueObject" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/jdbc/mock/ResultSetBuilder$_build_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMrs" desc="()Lcom/mockrunner/mock/jdbc/MockResultSet;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/jdbc/mock/ResultSetBuilder$_build_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMrs" desc="()Lcom/mockrunner/mock/jdbc/MockResultSet;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/jdbc/mock/ResultSetBuilder"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lgroovy/lang/Closure;)Lcom/stehno/vanilla/test/jdbc/mock/ResultSetBuilder;" line="42"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultSet" desc="(Lgroovy/lang/Closure;)Ljava/sql/ResultSet;" line="57"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="columns" desc="(Ljava/util/List;)V" line="62"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="columns" desc="([Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="data" desc="(Ljava/util/List;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="data" desc="([Ljava/lang/Object;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="object" desc="(Ljava/lang/Object;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/util/Map;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/sql/ResultSet;" line="98"><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkColumnSizes" desc="(I)V" line="112"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="350"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/test/jdbc/mock/ResultSetBuilder$_map_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColValueMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ResultSetBuilder.groovy"><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="20" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="14" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="2" ci="2" mb="0" cb="0"/><line nr="57" mi="2" ci="14" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="82" mi="2" ci="14" mb="0" cb="0"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="2" ci="24" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="38" mb="0" cb="0"/><line nr="100" mi="0" ci="13" mb="0" cb="0"/><line nr="101" mi="2" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="13" mb="0" cb="0"/><line nr="105" mi="2" ci="14" mb="0" cb="0"/><line nr="108" mi="2" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="21" mb="0" cb="0"/><line nr="114" mi="0" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="464"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="5" covered="18"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="66" covered="464"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="5" covered="18"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/stehno/vanilla/config"><class name="com/stehno/vanilla/config/MapConfigurationSource$_getMap_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefix" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getBoolean_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource"><method name="&lt;init&gt;" desc="(Ljava/util/Properties;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="40"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="48"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;" line="58"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;" line="63"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFloat" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;" line="68"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDouble" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;" line="73"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="78"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" line="83"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;" line="88"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoolean" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="93"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/config/ConfigurationSource;" line="98"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;" line="103"><counter type="INSTRUCTION" missed="3" covered="85"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="18" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="(Ljava/lang/String;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Ljava/lang/String;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Ljava/lang/String;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFloat" desc="(Ljava/lang/String;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDouble" desc="(Ljava/lang/String;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/String;)Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="(Ljava/lang/String;)Ljava/io/File;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpan;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="(Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="234" covered="453"/><counter type="BRANCH" missed="22" covered="20"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="23" covered="26"/><counter type="METHOD" missed="2" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getFloat_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getLong_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;" line="48"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;" line="53"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFloat" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;" line="58"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDouble" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;" line="63"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="68"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" line="73"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;" line="78"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoolean" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="83"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/config/ConfigurationSource;" line="88"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;" line="93"><counter type="INSTRUCTION" missed="3" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;" line="108"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfig" desc="(Ljava/lang/String;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="7" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Ljava/lang/String;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Ljava/lang/String;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFloat" desc="(Ljava/lang/String;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDouble" desc="(Ljava/lang/String;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/String;)Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/lang/String;)Ljava/io/File;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpan;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="(Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="199" covered="386"/><counter type="BRANCH" missed="24" covered="18"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="25" covered="22"/><counter type="METHOD" missed="6" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getBoolean_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getBoolean_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getPath_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getInt_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getString_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getFile_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getFloat_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getTimeSpan_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getDouble_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getLong_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getConfiguration_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getInt_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getDouble_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getTimeSpan_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getMap_closure11"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProps" desc="()Ljava/util/Properties;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getMap_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefix" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="26"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getMap_closure11"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="108"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefix" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="55"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getLong_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getFloat_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getPath_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource"><method name="&lt;init&gt;" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)V"><counter type="INSTRUCTION" missed="253" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfiguration" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/config/ConfigurationSource;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getStringStringString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getIntStringInteger" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;" line="44"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getLongStringLong" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;" line="49"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getFloatStringFloat" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;" line="54"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getDoubleStringDouble" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;" line="59"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getPathStringPath" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="64"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getFileStringFile" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" line="69"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getTimeSpanStringTimeSpan" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;" line="74"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getBooleanStringBoolean" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="79"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getConfigurationString" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/config/ConfigurationSource;" line="84"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getMapStringMap" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;" line="89"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getObjectStringClassObjectMapperObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Ljava/lang/String;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(Ljava/lang/String;)Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/lang/String;)Ljava/io/File;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpan;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="(Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Lcom/stehno/vanilla/config/ConfigurationSource;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="832" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="52" covered="0"/><counter type="METHOD" missed="38" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getFile_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertSource" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSource" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)V" line="62"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftShift" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)V" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;" line="81"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;" line="86"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;Ljava/lang/Float;)Ljava/lang/Float;" line="91"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double;" line="96"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="101"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" line="106"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;" line="111"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="116"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfiguration" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/config/ConfigurationSource;" line="121"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;" line="126"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findValue" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Ljava/lang/String;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(Ljava/lang/String;)Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/lang/String;)Ljava/io/File;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeSpan" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpan;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="(Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findValue" desc="(Lgroovy/lang/Closure;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="649" covered="113"/><counter type="BRANCH" missed="28" covered="6"/><counter type="LINE" missed="14" covered="9"/><counter type="COMPLEXITY" missed="40" covered="7"/><counter type="METHOD" missed="26" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getFile_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getPath_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getInt_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/MapConfigurationSource$_getDouble_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CompositeConfigurationSource$_getObject_closure12"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lcom/stehno/vanilla/config/ConfigurationSource;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapper" desc="()Lcom/stehno/vanilla/mapper/ObjectMapper;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/PropertiesConfigurationSource$_getTimeSpan_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure11"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure12"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Class;Lcom/stehno/vanilla/mapper/ObjectMapper;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/config/CachedConfigurationSource$_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="PropertiesConfigurationSource.groovy"><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="15" ci="0" mb="0" cb="0"/><line nr="41" mi="12" ci="0" mb="0" cb="0"/><line nr="42" mi="11" ci="0" mb="0" cb="0"/><line nr="44" mi="11" ci="0" mb="0" cb="0"/><line nr="48" mi="60" ci="0" mb="4" cb="0"/><line nr="53" mi="2" ci="11" mb="0" cb="0"/><line nr="58" mi="4" ci="23" mb="0" cb="0"/><line nr="63" mi="4" ci="23" mb="0" cb="0"/><line nr="68" mi="4" ci="23" mb="0" cb="0"/><line nr="73" mi="4" ci="23" mb="0" cb="0"/><line nr="78" mi="4" ci="23" mb="0" cb="0"/><line nr="83" mi="4" ci="23" mb="0" cb="0"/><line nr="88" mi="4" ci="23" mb="0" cb="0"/><line nr="93" mi="4" ci="23" mb="0" cb="0"/><line nr="98" mi="2" ci="18" mb="0" cb="0"/><line nr="103" mi="0" ci="28" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="2" ci="37" mb="0" cb="0"/><line nr="108" mi="2" ci="30" mb="0" cb="0"/><line nr="111" mi="3" ci="17" mb="1" cb="1"/><line nr="116" mi="15" ci="13" mb="2" cb="2"/><line nr="117" mi="3" ci="12" mb="1" cb="1"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="122" mi="2" ci="12" mb="0" cb="2"/><counter type="INSTRUCTION" missed="554" covered="662"/><counter type="BRANCH" missed="62" covered="20"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="59" covered="46"/><counter type="METHOD" missed="18" covered="45"/><counter type="CLASS" missed="1" covered="11"/></sourcefile><sourcefile name="CompositeConfigurationSource.groovy"><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="24" mb="0" cb="0"/><line nr="81" mi="29" ci="0" mb="0" cb="0"/><line nr="86" mi="29" ci="0" mb="0" cb="0"/><line nr="91" mi="29" ci="0" mb="0" cb="0"/><line nr="96" mi="29" ci="0" mb="0" cb="0"/><line nr="101" mi="29" ci="0" mb="0" cb="0"/><line nr="106" mi="29" ci="0" mb="0" cb="0"/><line nr="111" mi="29" ci="0" mb="0" cb="0"/><line nr="116" mi="29" ci="0" mb="0" cb="0"/><line nr="121" mi="28" ci="0" mb="0" cb="0"/><line nr="126" mi="29" ci="0" mb="0" cb="0"/><line nr="131" mi="34" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="21" mb="0" cb="2"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="2" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="1254" covered="139"/><counter type="BRANCH" missed="28" covered="6"/><counter type="LINE" missed="14" covered="9"/><counter type="COMPLEXITY" missed="88" covered="9"/><counter type="METHOD" missed="74" covered="6"/><counter type="CLASS" missed="11" covered="2"/></sourcefile><sourcefile name="MapConfigurationSource.groovy"><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="2" ci="17" mb="0" cb="2"/><line nr="48" mi="4" ci="23" mb="0" cb="0"/><line nr="53" mi="4" ci="23" mb="0" cb="0"/><line nr="58" mi="4" ci="23" mb="0" cb="0"/><line nr="63" mi="4" ci="23" mb="0" cb="0"/><line nr="68" mi="11" ci="16" mb="0" cb="0"/><line nr="73" mi="11" ci="16" mb="0" cb="0"/><line nr="78" mi="11" ci="16" mb="0" cb="0"/><line nr="83" mi="4" ci="23" mb="0" cb="0"/><line nr="88" mi="2" ci="18" mb="0" cb="0"/><line nr="93" mi="0" ci="28" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="14" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="5" ci="23" mb="0" cb="0"/><line nr="103" mi="3" ci="17" mb="1" cb="1"/><line nr="108" mi="28" ci="0" mb="4" cb="0"/><line nr="109" mi="15" ci="0" mb="2" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="3" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="464" covered="545"/><counter type="BRANCH" missed="56" covered="20"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="55" covered="38"/><counter type="METHOD" missed="20" covered="35"/><counter type="CLASS" missed="0" covered="10"/></sourcefile><sourcefile name="CachedConfigurationSource.groovy"><line nr="39" mi="13" ci="0" mb="0" cb="0"/><line nr="44" mi="14" ci="0" mb="0" cb="0"/><line nr="49" mi="14" ci="0" mb="0" cb="0"/><line nr="54" mi="14" ci="0" mb="0" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="64" mi="14" ci="0" mb="0" cb="0"/><line nr="69" mi="14" ci="0" mb="0" cb="0"/><line nr="74" mi="14" ci="0" mb="0" cb="0"/><line nr="79" mi="14" ci="0" mb="0" cb="0"/><line nr="84" mi="13" ci="0" mb="0" cb="0"/><line nr="89" mi="14" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1309" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="104" covered="0"/><counter type="METHOD" missed="74" covered="0"/><counter type="CLASS" missed="13" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3581" covered="1346"/><counter type="BRANCH" missed="206" covered="46"/><counter type="LINE" missed="34" covered="51"/><counter type="COMPLEXITY" missed="306" covered="93"/><counter type="METHOD" missed="186" covered="86"/><counter type="CLASS" missed="25" covered="23"/></package><package name="com/stehno/vanilla/text"><class name="com/stehno/vanilla/text/CommaSeparatedLineFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatComment" desc="(Ljava/lang/String;)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatLine" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="46"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextTable$_render_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTbl" desc="()Ljava/lang/StringBuilder;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="71"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextTable$_render_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="5" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTbl" desc="()Ljava/lang/StringBuilder;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TableColumn"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="149"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinWidth" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMinWidth" desc="(I)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextFileReader$_readLines_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextFileWriter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/nio/file/Path;)V" line="49"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFilePath" desc="(Ljava/net/URI;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/net/URL;)V" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFilePath" desc="(Ljava/io/File;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeComment" desc="(Ljava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeAll" desc="(Ljava/lang/Iterable;)V" line="97"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeText" desc="(Ljava/lang/String;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilePath" desc="()Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLineFormatter" desc="()Lcom/stehno/vanilla/text/LineFormatter;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLineFormatter" desc="(Lcom/stehno/vanilla/text/LineFormatter;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="102"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextTable"><method name="&lt;init&gt;" desc="(Z[Lcom/stehno/vanilla/text/TableColumn;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lcom/stehno/vanilla/text/TableColumn;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="40" covered="115"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftShift" desc="(Ljava/util/List;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addRow" desc="(Ljava/util/List;)V" line="131"><counter type="INSTRUCTION" missed="9" covered="68"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendBorder" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendBorder" desc="(Ljava/lang/StringBuilder;)V"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumns" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRows" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="367"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="12" covered="12"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/CommaSeparatedLineParser"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsable" desc="(Ljava/lang/String;)Z" line="53"><counter type="INSTRUCTION" missed="9" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseLine" desc="(Ljava/lang/String;)[Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseItem" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="141"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextTable$_normalize_closure1$_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="2" covered="66"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRowWidth" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="81"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextFileWriter$_writeAll_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/text/TextTable$_render_closure3$_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTbl" desc="()Ljava/lang/StringBuilder;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="76"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextTable$_normalize_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/CommaSeparatedLineParser$_parseLine_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getData" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextFileReader$_eachLine_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;I)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="83" covered="75"/><counter type="BRANCH" missed="13" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="120" covered="90"/><counter type="BRANCH" missed="17" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/text/TextFileReader"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/nio/file/Path;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/net/URI;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/net/URL;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFilePath" desc="(Ljava/io/File;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eachLine" desc="(Lgroovy/lang/Closure;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLines" desc="()Ljava/util/List;" line="111"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilePath" desc="()Ljava/nio/file/Path;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineParser" desc="()Lcom/stehno/vanilla/text/LineParser;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLineParser" desc="(Lcom/stehno/vanilla/text/LineParser;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstLine" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFirstLine" desc="(I)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrimmed" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTrimmed" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTrimmed" desc="(Z)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="227"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TextFileReader.groovy"><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="17" mb="0" cb="0"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="60" mb="2" cb="6"/><line nr="94" mi="0" ci="16" mb="0" cb="0"/><line nr="95" mi="12" ci="21" mb="8" cb="8"/><line nr="96" mi="20" ci="18" mb="3" cb="1"/><line nr="98" mi="12" ci="12" mb="2" cb="2"/><line nr="99" mi="39" ci="22" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="113" mi="0" ci="12" mb="0" cb="0"/><line nr="114" mi="2" ci="9" mb="0" cb="0"/><line nr="117" mi="2" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="142" covered="343"/><counter type="BRANCH" missed="19" covered="17"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="18" covered="22"/><counter type="METHOD" missed="5" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="TextTable.groovy"><line nr="29" mi="0" ci="19" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="19" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="30" mb="0" cb="0"/><line nr="60" mi="2" ci="21" mb="0" cb="0"/><line nr="63" mi="2" ci="24" mb="0" cb="0"/><line nr="66" mi="0" ci="26" mb="0" cb="0"/><line nr="75" mi="0" ci="15" mb="0" cb="0"/><line nr="78" mi="10" ci="12" mb="2" cb="2"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="0"/><line nr="85" mi="0" ci="28" mb="0" cb="0"/><line nr="86" mi="2" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="11" ci="13" mb="2" cb="2"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="95" mi="0" ci="13" mb="0" cb="0"/><line nr="96" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="0" ci="13" mb="0" cb="0"/><line nr="98" mi="0" ci="33" mb="0" cb="0"/><line nr="99" mi="2" ci="13" mb="0" cb="0"/><line nr="101" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="2"/><line nr="104" mi="5" ci="11" mb="0" cb="0"/><line nr="109" mi="7" ci="12" mb="6" cb="6"/><line nr="110" mi="10" ci="7" mb="0" cb="0"/><line nr="113" mi="2" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="9" ci="57" mb="1" cb="1"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="30" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="37" mb="0" cb="4"/><counter type="INSTRUCTION" missed="141" covered="802"/><counter type="BRANCH" missed="13" covered="19"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="18" covered="30"/><counter type="METHOD" missed="7" covered="25"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="TextFileWriter.groovy"><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="17" mb="0" cb="0"/><line nr="63" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="79" mi="0" ci="14" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="102"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="CommaSeparatedLineFormatter.groovy"><line nr="32" mi="2" ci="9" mb="0" cb="0"/><line nr="37" mi="2" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="46"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommaSeparatedLineParser.groovy"><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="9" ci="19" mb="0" cb="6"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="17" mb="0" cb="0"/><line nr="61" mi="2" ci="16" mb="0" cb="0"/><line nr="64" mi="2" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="0"/><line nr="70" mi="2" ci="15" mb="0" cb="2"/><counter type="INSTRUCTION" missed="36" covered="174"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="389" covered="1467"/><counter type="BRANCH" missed="32" covered="44"/><counter type="LINE" missed="4" covered="69"/><counter type="COMPLEXITY" missed="45" covered="75"/><counter type="METHOD" missed="21" covered="61"/><counter type="CLASS" missed="1" covered="14"/></package><package name="com/stehno/vanilla/jdbc/mapper/runtime"><class name="com/stehno/vanilla/jdbc/mapper/runtime/RuntimeFieldMapping$_extract_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapper" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/runtime/RuntimeFieldMapping$_extract_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="5" covered="110"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNameOrPosition" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetterName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArg" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="141"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/runtime/RuntimeResultSetMapper"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/Map;Ljava/util/Collection;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/Map;)V" line="48"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapper" desc="(Ljava/lang/Class;Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;Lgroovy/lang/Closure;)Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapper;" line="67"><counter type="INSTRUCTION" missed="2" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapper" desc="(Ljava/lang/Class;Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;)Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapper;" line="79"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapRow" desc="(Ljava/sql/ResultSet;I)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/sql/ResultSet;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyMapping" desc="(Ljava/sql/ResultSet;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;Ljava/util/Map;)V" line="98"><counter type="INSTRUCTION" missed="41" covered="87"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapper" desc="(Ljava/lang/Class;Lgroovy/lang/Closure;)Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapper;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapper" desc="(Ljava/lang/Class;)Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapper;"><counter type="INSTRUCTION" missed="17" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefix" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPrefix" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="91" covered="305"/><counter type="BRANCH" missed="12" covered="14"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="13" covered="11"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/runtime/RuntimeFieldMapping"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="using" desc="(Ljava/lang/Object;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Ljava/lang/Object;Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="52"><counter type="INSTRUCTION" missed="3" covered="107"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="74"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="185"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/runtime/RuntimeResultSetMapper$_call_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRs" desc="()Ljava/sql/ResultSet;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstanceProps" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuntimeResultSetMapper.groovy"><line nr="38" mi="0" ci="19" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="2" ci="9" mb="0" cb="0"/><line nr="79" mi="2" ci="12" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="14" mb="0" cb="0"/><line nr="91" mi="2" ci="13" mb="0" cb="0"/><line nr="94" mi="2" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="18" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="8" ci="15" mb="10" cb="6"/><line nr="104" mi="12" ci="12" mb="0" cb="0"/><line nr="106" mi="21" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="343"/><counter type="BRANCH" missed="12" covered="14"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="16" covered="13"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RuntimeFieldMapping.groovy"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="13" mb="0" cb="0"/><line nr="52" mi="1" ci="25" mb="1" cb="7"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="6"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="58" mi="0" ci="14" mb="0" cb="0"/><line nr="61" mi="0" ci="17" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="2"/><line nr="63" mi="3" ci="68" mb="0" cb="2"/><line nr="65" mi="2" ci="35" mb="0" cb="0"/><line nr="69" mi="2" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="15" mb="0" cb="0"/><line nr="77" mi="2" ci="9" mb="0" cb="0"/><line nr="80" mi="2" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="352"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="7" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="232" covered="695"/><counter type="BRANCH" missed="13" covered="31"/><counter type="LINE" missed="3" covered="41"/><counter type="COMPLEXITY" missed="24" covered="29"/><counter type="METHOD" missed="13" covered="18"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/stehno/vanilla"><class name="com/stehno/vanilla/Affirmations"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="affirm" desc="(ZLjava/lang/String;Ljava/lang/Class;)V" line="33"><counter type="INSTRUCTION" missed="3" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirmNot" desc="(ZLjava/lang/String;Ljava/lang/Class;)V" line="50"><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirm" desc="(ZLjava/lang/Class;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirmNot" desc="(ZLjava/lang/Class;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirm" desc="(ZLjava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirm" desc="(Z)V"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirmNot" desc="(ZLjava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affirmNot" desc="(Z)V"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="146"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Affirmations.groovy"><line nr="33" mi="0" ci="6" mb="0" cb="4"/><line nr="34" mi="0" ci="3" mb="0" cb="2"/><line nr="35" mi="3" ci="19" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="15" ci="16" mb="4" cb="4"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="15" mb="0" cb="2"/><counter type="INSTRUCTION" missed="64" covered="146"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="64" covered="146"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/stehno/vanilla/jdbc/mapper"><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperBuilder$_applyImpliedMappings_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMappedMeta" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="36"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperBuilder$_applyImpliedMappings_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoredProperties" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperBuilder$_applyImpliedMappings_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperBuilder$_applyImpliedMappings_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgroovy/lang/MetaProperty;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperBuilder"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapper;" line="59"><counter type="INSTRUCTION" missed="18" covered="43"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFieldMapping" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="68"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyImpliedMappings" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWritable" desc="(Lgroovy/lang/MetaClass;Ljava/lang/String;Ljava/lang/Class;)Z" line="82"><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMapping" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mappings" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ignored" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignore" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredNames" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappings" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__mappings$get" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__ignoredNames$get" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__ignoredNames$set" desc="(Ljava/util/Collection;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="com_stehno_vanilla_jdbc_mapper_ResultSetMapperDslSupport__mappings$set" desc="(Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="266" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMappedType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStyle" desc="()Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="369" covered="308"/><counter type="BRANCH" missed="21" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="19" covered="15"/><counter type="METHOD" missed="7" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport$Trait$Helper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMapping" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="33"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mappings" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;)Ljava/util/Collection;" line="43"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignored" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;)Ljava/util/Collection;" line="54"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="65"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignore" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;[Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredNames" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMappings" desc="(Lcom/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="136"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/FieldMapping"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtractor" desc="()Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConverter" desc="()Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="59"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromObject" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="69"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="79"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBoolean" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="89"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromByte" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="99"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromShort" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="109"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromInt" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="119"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromLong" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="129"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromFloat" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="139"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromDouble" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="149"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromBytes" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="159"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromDate" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="169"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromTime" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="179"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromTimestamp" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="189"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromAsciiStream" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="199"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromUnicodeStream" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="209"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromBinaryStream" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="219"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCharacterStream" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="229"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromBigDecimal" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="239"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromRef" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="249"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromBlob" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="259"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromClob" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="269"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="279"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromURL" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="289"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromMapper" desc="(Ljava/lang/Object;)Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;" line="293"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="using" desc="(Ljava/lang/Object;)V" line="302"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExtractor" desc="(Ljava/lang/Object;)V" line="317"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="206" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="500" covered="179"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="27" covered="17"/><counter type="METHOD" missed="20" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/ResultSetMapperDslSupport$Trait$Helper$_mappings_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;Lcom/stehno/vanilla/jdbc/mapper/FieldMapping;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/jdbc/mapper/MappingStyle"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/jdbc/mapper/MappingStyle;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="127"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ResultSetMapperDslSupport.groovy"><line nr="33" mi="19" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="36" mb="0" cb="0"/><line nr="44" mi="2" ci="13" mb="0" cb="2"/><line nr="54" mi="2" ci="16" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="19" mb="0" cb="0"/><line nr="67" mi="2" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="158"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FieldMapping.groovy"><line nr="35" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="2" ci="3" mb="0" cb="0"/><line nr="50" mi="2" ci="3" mb="0" cb="0"/><line nr="59" mi="2" ci="10" mb="0" cb="0"/><line nr="69" mi="2" ci="11" mb="0" cb="0"/><line nr="79" mi="2" ci="11" mb="0" cb="0"/><line nr="89" mi="13" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="11" mb="0" cb="0"/><line nr="109" mi="13" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="11" mb="0" cb="0"/><line nr="129" mi="13" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="11" mb="0" cb="0"/><line nr="149" mi="13" ci="0" mb="0" cb="0"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="11" mb="0" cb="0"/><line nr="179" mi="13" ci="0" mb="0" cb="0"/><line nr="189" mi="13" ci="0" mb="0" cb="0"/><line nr="199" mi="13" ci="0" mb="0" cb="0"/><line nr="209" mi="13" ci="0" mb="0" cb="0"/><line nr="219" mi="13" ci="0" mb="0" cb="0"/><line nr="229" mi="13" ci="0" mb="0" cb="0"/><line nr="239" mi="13" ci="0" mb="0" cb="0"/><line nr="249" mi="13" ci="0" mb="0" cb="0"/><line nr="259" mi="13" ci="0" mb="0" cb="0"/><line nr="269" mi="13" ci="0" mb="0" cb="0"/><line nr="279" mi="13" ci="0" mb="0" cb="0"/><line nr="289" mi="13" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="10" mb="0" cb="0"/><line nr="302" mi="0" ci="9" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="500" covered="179"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="27" covered="17"/><counter type="METHOD" missed="20" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResultSetMapperBuilder.groovy"><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="9" ci="16" mb="5" cb="5"/><line nr="60" mi="7" ci="4" mb="0" cb="0"/><line nr="63" mi="2" ci="21" mb="0" cb="0"/><line nr="68" mi="2" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="23" mb="0" cb="0"/><line nr="75" mi="2" ci="66" mb="0" cb="0"/><line nr="76" mi="2" ci="15" mb="0" cb="2"/><line nr="77" mi="2" ci="21" mb="0" cb="2"/><line nr="78" mi="2" ci="11" mb="0" cb="0"/><line nr="82" mi="9" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="440" covered="426"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="25" covered="25"/><counter type="METHOD" missed="13" covered="22"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="MappingStyle.groovy"><counter type="INSTRUCTION" missed="15" covered="127"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1051" covered="890"/><counter type="BRANCH" missed="37" covered="13"/><counter type="LINE" missed="18" covered="33"/><counter type="COMPLEXITY" missed="62" covered="56"/><counter type="METHOD" missed="41" covered="52"/><counter type="CLASS" missed="0" covered="9"/></package><package name="com/stehno/vanilla/util"><class name="com/stehno/vanilla/util/TimeSpan$_parse_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDigits" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUnit" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/Strings$_underscoreToCamelCase_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/Pagination"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="page" desc="(Ljava/util/Collection;II)Ljava/util/Collection;" line="40"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="page" desc="([Ljava/lang/Object;II)[Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="28" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="range" desc="(III)Lgroovy/lang/IntRange;" line="65"><counter type="INSTRUCTION" missed="98" covered="106"/><counter type="BRANCH" missed="19" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countPages" desc="(II)I" line="86"><counter type="INSTRUCTION" missed="41" covered="40"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countPages" desc="(Ljava/util/Collection;I)I" line="97"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countPages" desc="([Ljava/lang/Object;I)I" line="108"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="221" covered="201"/><counter type="BRANCH" missed="29" covered="29"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="26" covered="10"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/Strings$_camelCaseToUnderscore_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/Strings"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="underscoreToCamelCase" desc="(Ljava/lang/String;)Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="camelCaseToUnderscore" desc="(Ljava/lang/String;)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="50"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/TimeSpan"><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;)V"><counter type="INSTRUCTION" missed="36" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Number;Lcom/stehno/vanilla/util/TimeSpanUnit;)V"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpan;" line="42"><counter type="INSTRUCTION" missed="2" covered="78"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="57" covered="63"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMillis" desc="()J" line="73"><counter type="INSTRUCTION" missed="55" covered="267"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;" line="97"><counter type="INSTRUCTION" missed="11" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lcom/stehno/vanilla/util/TimeSpan;)Lcom/stehno/vanilla/util/TimeSpan;" line="102"><counter type="INSTRUCTION" missed="11" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Ljava/lang/Number;)Lcom/stehno/vanilla/util/TimeSpan;" line="107"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Ljava/lang/Number;)Lcom/stehno/vanilla/util/TimeSpan;" line="111"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/stehno/vanilla/util/TimeSpan;" line="115"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previous" desc="()Lcom/stehno/vanilla/util/TimeSpan;" line="119"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="25" covered="59"/><counter type="BRANCH" missed="8" covered="8"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="160" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Number;"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnit" desc="()Lcom/stehno/vanilla/util/TimeSpanUnit;"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="476" covered="827"/><counter type="BRANCH" missed="45" covered="37"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="35" covered="23"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/TimeSpanUnit$_fromAbbreviation_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbr" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/util/TimeSpanUnit"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I[Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abbreviate" desc="(Z)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromAbbreviation" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpanUnit;" line="44"><counter type="INSTRUCTION" missed="25" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lcom/stehno/vanilla/util/TimeSpanUnit;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/util/TimeSpanUnit;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="253"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbbreviations" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="345"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Strings.groovy"><line nr="30" mi="4" ci="14" mb="4" cb="4"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="26" mb="0" cb="0"/><line nr="43" mi="4" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="87"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Pagination.groovy"><line nr="40" mi="2" ci="23" mb="0" cb="0"/><line nr="53" mi="28" ci="28" mb="2" cb="2"/><line nr="65" mi="15" ci="23" mb="6" cb="6"/><line nr="66" mi="15" ci="23" mb="6" cb="6"/><line nr="68" mi="6" ci="13" mb="7" cb="7"/><line nr="69" mi="18" ci="8" mb="0" cb="0"/><line nr="70" mi="18" ci="8" mb="0" cb="0"/><line nr="72" mi="24" ci="19" mb="0" cb="0"/><line nr="75" mi="2" ci="10" mb="0" cb="0"/><line nr="86" mi="41" ci="38" mb="8" cb="8"/><line nr="97" mi="17" ci="0" mb="0" cb="0"/><line nr="108" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="221" covered="201"/><counter type="BRANCH" missed="29" covered="29"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="26" covered="10"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeSpanUnit.groovy"><line nr="36" mi="0" ci="19" mb="0" cb="0"/><line nr="40" mi="2" ci="16" mb="0" cb="2"/><line nr="44" mi="27" ci="38" mb="2" cb="2"/><counter type="INSTRUCTION" missed="57" covered="379"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TimeSpan.groovy"><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="21" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="6"/><line nr="47" mi="3" ci="9" mb="0" cb="0"/><line nr="49" mi="2" ci="9" mb="0" cb="0"/><line nr="53" mi="2" ci="35" mb="0" cb="0"/><line nr="62" mi="57" ci="61" mb="8" cb="8"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="1" cb="1"/><line nr="75" mi="27" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="3" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="3" ci="24" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="3" ci="24" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="3" ci="24" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="2"/><line nr="85" mi="3" ci="24" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="87" mi="3" ci="30" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="89" mi="3" ci="30" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="1" cb="1"/><line nr="91" mi="7" ci="30" mb="0" cb="0"/><line nr="97" mi="9" ci="47" mb="1" cb="1"/><line nr="98" mi="2" ci="22" mb="0" cb="0"/><line nr="102" mi="9" ci="47" mb="1" cb="1"/><line nr="103" mi="2" ci="22" mb="0" cb="0"/><line nr="107" mi="2" ci="18" mb="0" cb="0"/><line nr="111" mi="2" ci="18" mb="0" cb="0"/><line nr="115" mi="2" ci="25" mb="0" cb="0"/><line nr="119" mi="2" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="497" covered="885"/><counter type="BRANCH" missed="45" covered="43"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="37" covered="28"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="819" covered="1552"/><counter type="BRANCH" missed="80" covered="80"/><counter type="LINE" missed="4" covered="50"/><counter type="COMPLEXITY" missed="74" covered="53"/><counter type="METHOD" missed="13" covered="34"/><counter type="CLASS" missed="0" covered="8"/></package><package name="com/stehno/vanilla/mapper/transform"><class name="com/stehno/vanilla/mapper/transform/InjectObjectMapperTransform"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="([Lorg/codehaus/groovy/ast/ASTNode;Lorg/codehaus/groovy/control/SourceUnit;)V" line="48"><counter type="INSTRUCTION" missed="147" covered="167"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformMethodNode" desc="(Ljava/lang/String;Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformFieldNode" desc="(Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformPropertyNode" desc="(Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)V" line="103"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFieldNode" desc="(Ljava/lang/String;Lorg/codehaus/groovy/ast/AnnotatedNode;Lorg/codehaus/groovy/ast/ClassNode;)Lorg/codehaus/groovy/ast/FieldNode;" line="108"><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMapperConfig" desc="(Lorg/codehaus/groovy/ast/expr/ClosureExpression;)Lcom/stehno/vanilla/mapper/ObjectMapperConfig;" line="118"><counter type="INSTRUCTION" missed="2" covered="57"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createObjectMapperClass" desc="(Lorg/codehaus/groovy/ast/ClassNode;Ljava/lang/String;Lcom/stehno/vanilla/mapper/ObjectMapperConfig;)Lorg/codehaus/groovy/ast/ClassNode;" line="158"><counter type="INSTRUCTION" missed="2" covered="178"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="184" covered="665"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="5" covered="43"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/transform/InjectObjectMapperTransform$_extractMapperConfig_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="122"><counter type="INSTRUCTION" missed="20" covered="188"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperConfig" desc="()Lcom/stehno/vanilla/mapper/ObjectMapperConfig;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="203"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/transform/InjectObjectMapperTransform$_extractMapperConfig_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/mapper/transform/InjectObjectMapperTransform$_createObjectMapperClass_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="77" covered="312"/><counter type="BRANCH" missed="27" covered="25"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCode" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="327"/><counter type="BRANCH" missed="27" covered="25"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="22" covered="7"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="InjectObjectMapperTransform.groovy"><line nr="48" mi="16" ci="20" mb="3" cb="3"/><line nr="49" mi="16" ci="18" mb="3" cb="3"/><line nr="51" mi="1" ci="16" mb="3" cb="7"/><line nr="53" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="26" mb="0" cb="2"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="18" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="9" ci="0" mb="0" cb="0"/><line nr="72" mi="27" ci="1" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="43" ci="3" mb="0" cb="0"/><line nr="81" mi="26" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="34" mb="0" cb="2"/><line nr="88" mi="0" ci="18" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="32" mb="0" cb="0"/><line nr="92" mi="0" ci="21" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="32" mb="0" cb="0"/><line nr="98" mi="0" ci="20" mb="0" cb="0"/><line nr="99" mi="0" ci="16" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="22" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="23" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="113" mi="2" ci="17" mb="0" cb="0"/><line nr="118" mi="0" ci="15" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="2" ci="29" mb="0" cb="0"/><line nr="122" mi="0" ci="14" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="1" cb="1"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="1" cb="5"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="17" mb="0" cb="0"/><line nr="132" mi="0" ci="17" mb="0" cb="0"/><line nr="133" mi="0" ci="12" mb="0" cb="0"/><line nr="135" mi="0" ci="14" mb="0" cb="0"/><line nr="138" mi="2" ci="10" mb="2" cb="2"/><line nr="139" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="25" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="18" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="2"/><line nr="149" mi="10" ci="13" mb="0" cb="0"/><line nr="154" mi="2" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="18" mb="0" cb="0"/><line nr="159" mi="0" ci="38" mb="0" cb="2"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="16" mb="0" cb="0"/><line nr="166" mi="0" ci="12" mb="0" cb="0"/><line nr="168" mi="0" ci="16" mb="0" cb="0"/><line nr="169" mi="0" ci="45" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="1" cb="1"/><line nr="174" mi="0" ci="11" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="13" mb="0" cb="0"/><line nr="180" mi="8" ci="15" mb="10" cb="6"/><line nr="181" mi="8" ci="7" mb="0" cb="0"/><line nr="184" mi="7" ci="16" mb="8" cb="8"/><line nr="185" mi="17" ci="16" mb="0" cb="0"/><line nr="188" mi="7" ci="16" mb="8" cb="8"/><line nr="189" mi="17" ci="16" mb="0" cb="0"/><line nr="192" mi="0" ci="17" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="3" ci="46" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="2" ci="46" mb="0" cb="0"/><line nr="213" mi="0" ci="19" mb="0" cb="0"/><line nr="217" mi="0" ci="27" mb="0" cb="0"/><line nr="218" mi="0" ci="14" mb="0" cb="0"/><line nr="222" mi="2" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="302" covered="1208"/><counter type="BRANCH" missed="43" covered="59"/><counter type="LINE" missed="7" covered="79"/><counter type="COMPLEXITY" missed="39" covered="28"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="302" covered="1208"/><counter type="BRANCH" missed="43" covered="59"/><counter type="LINE" missed="7" covered="79"/><counter type="COMPLEXITY" missed="39" covered="28"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/stehno/vanilla/io"><class name="com/stehno/vanilla/io/FileSizeRolloverTriggerStrategy"><method name="&lt;init&gt;" desc="(JLcom/stehno/vanilla/io/StorageUnit;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldRoll" desc="(Ljava/io/File;)Z" line="36"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="63"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/TimeBasedRolloverTriggerStrategy"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shouldRoll" desc="(Ljava/io/File;)Z" line="41"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxLifespan" desc="()Lcom/stehno/vanilla/util/TimeSpan;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMaxLifespan" desc="(Lcom/stehno/vanilla/util/TimeSpan;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/io/FileSetBuilder"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="file" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="file" desc="(Ljava/io/File;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dir" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dir" desc="(Ljava/io/File;Lgroovy/lang/Closure;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dirs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dirs" desc="(Ljava/io/File;Lgroovy/lang/Closure;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="merge" desc="(Lcom/stehno/vanilla/io/FileSet;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/stehno/vanilla/io/FileSet;" line="114"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFile" desc="(Ljava/io/File;)Ljava/io/File;" line="118"><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDirectory" desc="(Ljava/io/File;)Ljava/io/File;" line="125"><counter type="INSTRUCTION" missed="30" covered="31"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dir" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dir" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dirs" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dirs" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="309"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="7" covered="18"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/DirectoryDifferences"><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;)V"><counter type="INSTRUCTION" missed="1064" covered="254"/><counter type="BRANCH" missed="52" covered="22"/><counter type="COMPLEXITY" missed="37" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="218" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFilesOnlyInA" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilesOnlyInB" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiedFiles" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1529" covered="304"/><counter type="BRANCH" missed="98" covered="22"/><counter type="COMPLEXITY" missed="64" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/FileSetBuilder$_dirs_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilter" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/RollingFile$_rollover_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/io/FileSetBuilder$_merge_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="7"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/DirectoryDifferenceCollector"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scan" desc="(Ljava/io/File;Ljava/io/File;)Lcom/stehno/vanilla/io/DirectoryDifferences;" line="42"><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectFiles" desc="(Ljava/io/File;)Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="different" desc="(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z" line="61"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asFile" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;" line="65"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFiles" desc="(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;" line="69"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashFile" desc="(Ljava/io/File;)[B" line="73"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="248"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/RollingFile"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([B)V" line="79"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftShift" desc="(Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftShift" desc="([B)V" line="99"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkRollover" desc="()V" line="103"><counter type="INSTRUCTION" missed="46" covered="19"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rollover" desc="()V" line="124"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="()Ljava/io/File;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFile" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRolloverStrategy" desc="()Lcom/stehno/vanilla/io/RolloverTriggerStrategy;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRolloverStrategy" desc="(Lcom/stehno/vanilla/io/RolloverTriggerStrategy;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileProvider" desc="()Lcom/stehno/vanilla/io/RolloverFileProvider;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFileProvider" desc="(Lcom/stehno/vanilla/io/RolloverFileProvider;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCompression" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCompression" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCompression" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="118" covered="89"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="12" covered="8"/><counter type="COMPLEXITY" missed="13" covered="6"/><counter type="METHOD" missed="11" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/StorageUnit"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Ljava/lang/Number;Lcom/stehno/vanilla/io/StorageUnit;)D" line="47"><counter type="INSTRUCTION" missed="8" covered="58"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="approximate" desc="(Ljava/lang/Number;Lcom/stehno/vanilla/io/StorageUnit;)J" line="66"><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lcom/stehno/vanilla/io/StorageUnit;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/io/StorageUnit;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="150"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMult" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="239"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/FileSet"><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;)V"><counter type="INSTRUCTION" missed="265" covered="65"/><counter type="BRANCH" missed="22" covered="8"/><counter type="COMPLEXITY" missed="15" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="48"><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="each" desc="(Lgroovy/lang/Closure;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lgroovy/lang/Closure;)Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileSet" desc="(Lgroovy/lang/Closure;)Lcom/stehno/vanilla/io/FileSet;" line="77"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFiles" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="458" covered="116"/><counter type="BRANCH" missed="58" covered="8"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="38" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/DirectoryDifferenceCollector$_scan_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirA" desc="()Ljava/io/File;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDirB" desc="()Ljava/io/File;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/DefaultRolloverFileProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provide" desc="(Ljava/io/File;Z)Ljava/io/File;" line="38"><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentPath" desc="(Ljava/io/File;)Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameWithoutExtension" desc="(Ljava/io/File;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="(Ljava/io/File;Z)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirectory" desc="()Ljava/io/File;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDirectory" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="192"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/ZipBuilder"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useCompression" desc="(I)Lcom/stehno/vanilla/io/ZipBuilder;" line="45"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withComment" desc="(Ljava/lang/String;)Lcom/stehno/vanilla/io/ZipBuilder;" line="58"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEntry" desc="(Ljava/util/zip/ZipEntry;[B)Lcom/stehno/vanilla/io/ZipBuilder;" line="71"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEntry" desc="(Ljava/util/zip/ZipEntry;Ljava/io/InputStream;)Lcom/stehno/vanilla/io/ZipBuilder;" line="87"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEntry" desc="(Ljava/lang/String;[BLjava/lang/String;)Lcom/stehno/vanilla/io/ZipBuilder;" line="103"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEntry" desc="(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/stehno/vanilla/io/ZipBuilder;" line="120"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zip" desc="()V" line="133"><counter type="INSTRUCTION" missed="10" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useCompression" desc="()Lcom/stehno/vanilla/io/ZipBuilder;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEntry" desc="(Ljava/lang/String;[B)Lcom/stehno/vanilla/io/ZipBuilder;"><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEntry" desc="(Ljava/lang/String;Ljava/io/InputStream;)Lcom/stehno/vanilla/io/ZipBuilder;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="251"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/DirectoryDifferenceCollector$_collectFiles_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFiles" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDir" desc="()Ljava/io/File;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="55"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/RollingFile$_rollover_closure1$_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/stehno/vanilla/io/FileSetBuilder$_dir_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFilter" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/stehno/vanilla/io/NoopRolloverTriggerStrategy"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shouldRoll" desc="(Ljava/io/File;)Z" line="28"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="FileSizeRolloverTriggerStrategy.groovy"><line nr="31" mi="0" ci="22" mb="0" cb="0"/><line nr="36" mi="9" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="63"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileSet.groovy"><line nr="48" mi="3" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="2" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="458" covered="116"/><counter type="BRANCH" missed="58" covered="8"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="38" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeBasedRolloverTriggerStrategy.groovy"><line nr="41" mi="45" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectoryDifferences.groovy"><counter type="INSTRUCTION" missed="1529" covered="304"/><counter type="BRANCH" missed="98" covered="22"/><counter type="COMPLEXITY" missed="64" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileSetBuilder.groovy"><line nr="25" mi="0" ci="23" mb="0" cb="0"/><line nr="33" mi="0" ci="13" mb="0" cb="0"/><line nr="42" mi="0" ci="14" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="23" mb="0" cb="0"/><line nr="65" mi="0" ci="23" mb="0" cb="8"/><line nr="66" mi="5" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="14" mb="0" cb="0"/><line nr="90" mi="0" ci="23" mb="0" cb="0"/><line nr="91" mi="0" ci="23" mb="0" cb="8"/><line nr="92" mi="5" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="15" mb="0" cb="0"/><line nr="118" mi="0" ci="29" mb="2" cb="8"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="2" ci="26" mb="0" cb="0"/><line nr="125" mi="2" ci="27" mb="5" cb="5"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="28" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="422"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="10" covered="31"/><counter type="METHOD" missed="3" covered="20"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="DefaultRolloverFileProvider.groovy"><line nr="38" mi="2" ci="66" mb="0" cb="0"/><line nr="42" mi="2" ci="20" mb="0" cb="2"/><line nr="46" mi="2" ci="32" mb="0" cb="0"/><line nr="50" mi="2" ci="41" mb="0" cb="2"/><counter type="INSTRUCTION" missed="11" covered="192"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ZipBuilder.groovy"><line nr="35" mi="0" ci="17" mb="0" cb="0"/><line nr="45" mi="0" ci="15" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="47" mi="2" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="2" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="2" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="2" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="2" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="2" ci="11" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="10" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="251"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoopRolloverTriggerStrategy.groovy"><line nr="28" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectoryDifferenceCollector.groovy"><line nr="29" mi="0" ci="26" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="4" ci="39" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="20" mb="0" cb="0"/><line nr="55" mi="2" ci="30" mb="0" cb="0"/><line nr="57" mi="2" ci="6" mb="0" cb="0"/><line nr="61" mi="9" ci="26" mb="0" cb="0"/><line nr="65" mi="2" ci="27" mb="0" cb="0"/><line nr="69" mi="2" ci="10" mb="0" cb="0"/><line nr="73" mi="2" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="341"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="StorageUnit.groovy"><line nr="47" mi="1" ci="8" mb="1" cb="1"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="4"/><line nr="51" mi="3" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="4"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="4" ci="14" mb="0" cb="0"/><line nr="66" mi="4" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="239"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RollingFile.groovy"><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="20" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="1" cb="1"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="2" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="17" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="2" cb="0"/><line nr="126" mi="18" ci="0" mb="0" cb="0"/><line nr="127" mi="17" ci="0" mb="0" cb="0"/><line nr="130" mi="17" ci="0" mb="0" cb="0"/><line nr="134" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="212" covered="89"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="16" covered="8"/><counter type="COMPLEXITY" missed="22" covered="6"/><counter type="METHOD" missed="19" covered="6"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2575" covered="2017"/><counter type="BRANCH" missed="175" covered="79"/><counter type="LINE" missed="21" covered="85"/><counter type="COMPLEXITY" missed="156" covered="92"/><counter type="METHOD" missed="48" covered="73"/><counter type="CLASS" missed="4" covered="14"/></package><counter type="INSTRUCTION" missed="14422" covered="19435"/><counter type="BRANCH" missed="998" covered="720"/><counter type="LINE" missed="143" covered="941"/><counter type="COMPLEXITY" missed="1201" covered="819"/><counter type="METHOD" missed="511" covered="647"/><counter type="CLASS" missed="32" covered="164"/></report>