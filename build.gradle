/*
 * Copyright (c) 2014 Christopher J. Stehno
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.1.5'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

subprojects {
    version = '0.2.0'
    group = 'com.stehno.vanilla'

    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'codenarc'
    apply plugin: 'jacoco'
    apply plugin: 'org.kordamp.gradle.stats'
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 8
    targetCompatibility = 8

    repositories {
        jcenter()
    }

    configurations {
        groovyDoc
    }

    dependencies {
        compile "org.codehaus.groovy:groovy-all:$groovyVersion"

        testCompile 'junit:junit:4.12'
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

        groovyDoc "org.codehaus.groovy:groovy-groovydoc:$groovyVersion"
        groovyDoc "org.codehaus.groovy:groovy-ant:$groovyVersion"

        codenarc(
            "org.codenarc:CodeNarc:$codeNarcVersion",
            "org.codehaus.groovy:groovy-all:$groovyVersion"
        )
    }

    test {
        jvmArgs '-Xverify:none'
    }

    groovydoc {
        groovyClasspath = configurations.groovyDoc
    }

    codenarc {
        toolVersion = codeNarcVersion
    }

    codenarcMain {
        ignoreFailures false
        configFile file('../config/codenarc-main.rules')

        maxPriority1Violations 0
        maxPriority2Violations 5
        maxPriority3Violations 10
    }

    codenarcTest {
        ignoreFailures true
        configFile file('../config/codenarc-test.rules')
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination "${buildDir}/reports/coverage"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

//
// DOCUMENTATION HELPERS
//

task compileGuide(type: GradleBuild) {
    buildFile = 'vanilla-guide/build.gradle'
    tasks = ['asciidoc']
}

task compileSite(type: GradleBuild) {
    buildFile = 'vanilla-site/build.gradle'
    tasks = ['jbake']
}
compileSite.dependsOn = ['vanilla-core:build', 'vanilla-core:test', 'compileGuide', 'vanilla-core:jacocoTestReport', 'vanilla-core:groovydoc']